# AUTOGENERATED! DO NOT EDIT! File to edit: 00_augmentation.ipynb (unless otherwise specified).

__all__ = ['RandomResizedCrop', 'RandomRotation']

# Cell
import torch
from .helpers import *
import torchvision.transforms.functional as TF
import torchvision.transforms as transforms
import os
import matplotlib.pyplot as plt

# Cell
class RandomResizedCrop():

    def __init__(self):
        pass

    def apply_transform(self,image,target):
        i, j, h, w = transforms.RandomResizedCrop.get_params(
            image,scale=(0.08, 1.0), ratio=(0.75, 1.3333333333333333))

        output_shape = list(image.shape[-2:])

        trans_image = TF.resized_crop(image,i, j, h, w,output_shape)
        trans_target = TF.resized_crop(target,i, j, h, w,output_shape)

        return trans_image, trans_target
    def __call__(self, imgs):
        image,target = imgs
        return self.apply_transform(image,target)

# Cell
class RandomRotation():

    def __init__(self):
        pass

    def apply_transform(self,image,target):
        angle = transforms.transforms.RandomRotation([360/(i) for i in range(2,12)])


        trans_image = TF.rotate(image, angle)
        trans_target = TF.rotate(target, angle)

        return trans_image, trans_target
    def __call__(self, imgs):
        image,target = imgs
        return self.apply_transform(image,target)