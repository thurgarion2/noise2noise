# AUTOGENERATED! DO NOT EDIT! File to edit: 00_helpers.ipynb (unless otherwise specified).

__all__ = ['load_images', 'to_float_image', 'to_rgb_image', 'show_img', 'psnr']

# Cell
import torch
import torchvision.transforms.functional as TF
import os
import matplotlib.pyplot as plt

# Cell
def load_images(path="./dataset/train_data.pkl"):
    if not os.path.exists(path):
        return torch.zeros((1,3,32,32)), torch.zeros((1,3,32,32))
    return torch.load(path)

# Cell
def to_float_image(image):
    return image.float()/255

# Cell
def to_rgb_image(image):
    return (image*255).to(torch.uint8)

# Cell
def show_img(float_img, axis=None):
    rgb_img = to_rgb_image(float_img.clip(0,1))
    if axis:
        axis.imshow(rgb_img.permute(1, 2, 0) )
    else:
        plt.imshow(rgb_img.permute(1, 2, 0) )

# Cell
def psnr(denoised , ground_truth, dim=None):
    # Peak Signal to Noise Ratio : denoised and ground_truth have range [0 , 1]
    if dim:
        mse = torch.mean(( denoised - ground_truth ) ** 2, dim=dim)
    else:
        mse = torch.mean(( denoised - ground_truth ) ** 2)
    return -10 * torch.log10( mse + 10**-8)